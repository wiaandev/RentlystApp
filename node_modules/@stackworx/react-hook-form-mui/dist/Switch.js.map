{"version":3,"file":"Switch.js","sources":["../src/Switch.tsx"],"sourcesContent":["import {\n  useController,\n  FieldValues,\n  FieldPath,\n  UseControllerProps,\n} from 'react-hook-form';\nimport MuiSwitch, { SwitchProps as MuiSwitchProps } from '@mui/material/Switch';\n\nexport type SwitchProps<\n  TName extends FieldPath<TFieldValues>,\n  TFieldValues extends FieldValues = FieldValues,\n> = UseControllerProps<TFieldValues, TName> &\n  Omit<\n    MuiSwitchProps,\n    'checked' | 'name' | 'value' | 'defaultChecked' | 'form'\n  >;\n\nexport function Switch<\n  TName extends FieldPath<TFieldValues>,\n  TFieldValues extends FieldValues,\n>({ control, name, rules, ...props }: SwitchProps<TName, TFieldValues>) {\n  const {\n    fieldState: { error },\n    field: { onChange, onBlur, value, ref },\n  } = useController({\n    name,\n    control,\n    rules,\n  });\n\n  return (\n    <MuiSwitch\n      sx={{\n        ...(error && {\n          '& .MuiSwitch-thumb': {\n            backgroundColor: 'error.main',\n          },\n          '& .MuiSwitch-track': {\n            backgroundColor: 'error.main',\n          },\n        }),\n      }}\n      {...props}\n      checked={Boolean(value)}\n      inputRef={ref}\n      onChange={onChange}\n      onBlur={onBlur}\n      value={value}\n      // required={!!rules?.required}\n      name={name}\n    />\n  );\n}\n\nSwitch.displayName = 'MuiReactHookFormSwitch';\n"],"names":[],"mappings":";;;AAiBO,SAAS,OAGd,EAAE,SAAS,MAAM,OAAO,GAAG,SAA2C;AAChE,QAAA;AAAA,IACJ,YAAY,EAAE,MAAM;AAAA,IACpB,OAAO,EAAE,UAAU,QAAQ,OAAO,IAAI;AAAA,MACpC,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,EAAA,CACD;AAGC,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,IAAI;AAAA,QACF,GAAI,SAAS;AAAA,UACX,sBAAsB;AAAA,YACpB,iBAAiB;AAAA,UACnB;AAAA,UACA,sBAAsB;AAAA,YACpB,iBAAiB;AAAA,UACnB;AAAA,QACF;AAAA,MACF;AAAA,MACC,GAAG;AAAA,MACJ,SAAS,QAAQ,KAAK;AAAA,MACtB,UAAU;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MAEA;AAAA,IAAA;AAAA,EAAA;AAGN;AAEA,OAAO,cAAc;"}