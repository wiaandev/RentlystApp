{"version":3,"file":"TextField.js","sources":["../src/TextField.tsx"],"sourcesContent":["import {\n  useController,\n  FieldValues,\n  UseControllerProps,\n  FieldPath,\n} from 'react-hook-form';\nimport MuiTextField, {\n  TextFieldProps as MuiTextFieldProps,\n} from '@mui/material/TextField';\n\nexport type TextFieldProps<\n  TName extends FieldPath<TFieldValues>,\n  TFieldValues extends FieldValues = FieldValues,\n> = UseControllerProps<TFieldValues, TName> &\n  Omit<MuiTextFieldProps, 'value' | 'name'>;\n\nexport function TextField<\n  TName extends FieldPath<TFieldValues>,\n  TFieldValues extends FieldValues,\n>({ control, name, rules, ...props }: TextFieldProps<TName, TFieldValues>) {\n  const {\n    field: { onChange, onBlur, value, ref },\n    fieldState: { error },\n  } = useController({\n    name,\n    control,\n    rules,\n  });\n\n  return (\n    <MuiTextField\n      {...props}\n      inputRef={ref}\n      onChange={onChange}\n      onBlur={onBlur}\n      value={value}\n      name={name}\n      error={!!error}\n      helperText={error?.message ?? props.helperText ?? ' '}\n    />\n  );\n}\n\nTextField.displayName = 'MuiReactHookFormTextField';\n"],"names":[],"mappings":";;;AAgBO,SAAS,UAGd,EAAE,SAAS,MAAM,OAAO,GAAG,SAA8C;AACnE,QAAA;AAAA,IACJ,OAAO,EAAE,UAAU,QAAQ,OAAO,IAAI;AAAA,IACtC,YAAY,EAAE,MAAM;AAAA,MAClB,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,EAAA,CACD;AAGC,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACE,GAAG;AAAA,MACJ,UAAU;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAO,CAAC,CAAC;AAAA,MACT,aAAY,+BAAO,YAAW,MAAM,cAAc;AAAA,IAAA;AAAA,EAAA;AAGxD;AAEA,UAAU,cAAc;"}