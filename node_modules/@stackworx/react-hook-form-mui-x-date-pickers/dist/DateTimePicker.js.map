{"version":3,"file":"DateTimePicker.js","sources":["../src/DateTimePicker.tsx"],"sourcesContent":["import {\n  FieldPath,\n  FieldValues,\n  useController,\n  UseControllerProps,\n} from 'react-hook-form';\nimport {\n  DateTimePicker as MuiDateTimePicker,\n  type DateTimePickerProps as MuiDateTimePickerProps,\n} from '@mui/x-date-pickers/DateTimePicker';\nimport { PickerValidDate } from '@mui/x-date-pickers/models';\nimport {\n  useLocalizationContext,\n  useUtils,\n  validateDateTime,\n} from '@mui/x-date-pickers/internals';\nimport { mapDateTimePickerValidationErrorMessage } from './utils/DatePickerValidationErrorsToMessage.ts';\nimport { TextFieldProps } from '@mui/material/TextField';\n\ntype DateTimePickerProps<\n  TFieldValues extends FieldValues,\n  TName extends FieldPath<TFieldValues>,\n  TDate extends PickerValidDate,\n  TEnableAccessibleFieldDOMStructure extends boolean = false,\n> = UseControllerProps<TFieldValues, TName> &\n  Omit<\n    MuiDateTimePickerProps<TDate, TEnableAccessibleFieldDOMStructure>,\n    'value' | 'name'\n  >;\n\nexport function DateTimePicker<\n  TFieldValues extends FieldValues,\n  TName extends FieldPath<TFieldValues>,\n  TDate extends PickerValidDate,\n  TEnableAccessibleFieldDOMStructure extends boolean = false,\n>({\n  name,\n  rules,\n  control,\n  ...props\n}: DateTimePickerProps<\n  TFieldValues,\n  TName,\n  TDate,\n  TEnableAccessibleFieldDOMStructure\n>) {\n  const { slotProps, ...otherPickerProps } = props;\n  const { getTimezone } = useUtils();\n  const adapter = useLocalizationContext<TDate>();\n  const {\n    field: { onChange, value, ref, onBlur },\n    fieldState,\n  } = useController({\n    name,\n    control,\n    rules: {\n      ...rules,\n      validate: {\n        ...rules?.validate,\n        internalMuiError: () => {\n          const muiValidationError = validateDateTime({\n            value,\n            props: {\n              ...props,\n              disableFuture: !!props.disableFuture,\n              disablePast: !!props.disablePast,\n              minDate: props.minDateTime ?? props.minDate,\n              maxDate: props.maxDateTime ?? props.maxDate,\n              minTime: props.minDateTime ?? props.minTime,\n              maxTime: props.maxDateTime ?? props.maxTime,\n              timezone: getTimezone(value),\n            },\n            adapter,\n          });\n\n          return (\n            mapDateTimePickerValidationErrorMessage(\n              muiValidationError,\n              props\n            ) ?? true\n          );\n        },\n      },\n    },\n  });\n\n  return (\n    <MuiDateTimePicker\n      onChange={onChange}\n      value={value}\n      ref={ref}\n      slotProps={{\n        ...slotProps,\n        textField: {\n          ...slotProps?.textField,\n          inputRef: ref,\n          error: !!fieldState.error,\n          onBlur,\n          helperText:\n            fieldState.error?.message ??\n            (slotProps?.textField as TextFieldProps)?.helperText,\n        },\n      }}\n      {...otherPickerProps}\n    />\n  );\n}\n"],"names":["MuiDateTimePicker"],"mappings":";;;;;AA8BO,SAAS,eAKd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAKG;;AACD,QAAM,EAAE,WAAW,GAAG,iBAAA,IAAqB;AACrC,QAAA,EAAE,gBAAgB;AACxB,QAAM,UAAU;AACV,QAAA;AAAA,IACJ,OAAO,EAAE,UAAU,OAAO,KAAK,OAAO;AAAA,IACtC;AAAA,MACE,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,IACA,OAAO;AAAA,MACL,GAAG;AAAA,MACH,UAAU;AAAA,QACR,GAAG,+BAAO;AAAA,QACV,kBAAkB,MAAM;AACtB,gBAAM,qBAAqB,iBAAiB;AAAA,YAC1C;AAAA,YACA,OAAO;AAAA,cACL,GAAG;AAAA,cACH,eAAe,CAAC,CAAC,MAAM;AAAA,cACvB,aAAa,CAAC,CAAC,MAAM;AAAA,cACrB,SAAS,MAAM,eAAe,MAAM;AAAA,cACpC,SAAS,MAAM,eAAe,MAAM;AAAA,cACpC,SAAS,MAAM,eAAe,MAAM;AAAA,cACpC,SAAS,MAAM,eAAe,MAAM;AAAA,cACpC,UAAU,YAAY,KAAK;AAAA,YAC7B;AAAA,YACA;AAAA,UAAA,CACD;AAGC,iBAAA;AAAA,YACE;AAAA,YACA;AAAA,UACG,KAAA;AAAA,QAET;AAAA,MACF;AAAA,IACF;AAAA,EAAA,CACD;AAGC,SAAA;AAAA,IAACA;AAAAA,IAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA,WAAW;AAAA,QACT,GAAG;AAAA,QACH,WAAW;AAAA,UACT,GAAG,uCAAW;AAAA,UACd,UAAU;AAAA,UACV,OAAO,CAAC,CAAC,WAAW;AAAA,UACpB;AAAA,UACA,cACE,gBAAW,UAAX,mBAAkB,cACjB,4CAAW,cAAX,mBAAyC;AAAA,QAC9C;AAAA,MACF;AAAA,MACC,GAAG;AAAA,IAAA;AAAA,EAAA;AAGV;"}