{"version":3,"file":"DatePickerValidationErrorsToMessage.js","sources":["../../src/utils/DatePickerValidationErrorsToMessage.ts"],"sourcesContent":["import { DateTimePickerProps } from '@mui/x-date-pickers/DateTimePicker';\nimport {\n  DateTimeValidationError,\n  DateValidationError,\n  PickerValidDate,\n  TimeValidationError,\n} from '@mui/x-date-pickers/models';\nimport { DatePickerProps } from '@mui/x-date-pickers/DatePicker';\nimport { TimePickerProps } from '@mui/x-date-pickers/TimePicker';\n\nexport function mapDateTimePickerValidationErrorMessage<\n  TDate extends PickerValidDate,\n  TEnableAccessibleFieldDOMStructure extends boolean,\n>(\n  error: DateTimeValidationError,\n  props: DateTimePickerProps<TDate, TEnableAccessibleFieldDOMStructure>\n) {\n  const maxDate = props?.maxDate || props?.maxDateTime;\n  const minDate = props?.minDate || props?.minDateTime;\n  const maxTime = props?.maxTime || props?.maxDateTime;\n  const minTime = props?.minTime || props?.minDateTime;\n\n  switch (error) {\n    case 'invalidDate':\n      return 'Invalid date/time value provided';\n    case 'disablePast':\n      return 'Values in the past are not allowed';\n    case 'disableFuture':\n      return 'Values in the future are not allowed';\n    case 'maxDate':\n      return maxDate\n        ? `Date should not be after ${maxDate}`\n        : 'Date should not be after the specified limit';\n    case 'minDate':\n      return minDate\n        ? `Date should not be before ${minDate}`\n        : 'Date should not be before the specified limit';\n    case 'maxTime':\n      return maxTime\n        ? `Time should not be after ${maxTime}`\n        : 'Time should not be after the specified limit';\n    case 'minTime':\n      return minTime\n        ? `Time should not be before ${minTime}`\n        : 'Time should not be before the specified limit';\n    case 'minutesStep':\n      return `Invalid minutes step, can only step in increments of ${props?.minutesStep || 'Invalid minutes step'}`;\n    case 'shouldDisableMonth':\n      return 'Month is not allowed';\n    case 'shouldDisableYear':\n      return 'Year is not allowed';\n    case 'shouldDisableDate':\n      return 'Date is not allowed';\n    case 'shouldDisableTime-hours':\n      return 'Specified hour is disabled';\n    case 'shouldDisableTime-minutes':\n      return 'Specified minute is disabled';\n    case 'shouldDisableTime-seconds':\n      return 'Specified second is disabled';\n    default:\n      return null;\n  }\n}\n\nexport function mapDatePickerValidationErrorMessage<\n  TDate extends PickerValidDate,\n  TEnableAccessibleFieldDOMStructure extends boolean,\n>(\n  error: DateValidationError,\n  props: DatePickerProps<TDate, TEnableAccessibleFieldDOMStructure>\n) {\n  const { maxDate, minDate } = props;\n\n  switch (error) {\n    case 'invalidDate':\n      return 'Invalid date value provided';\n    case 'disablePast':\n      return 'Values in the past are not allowed';\n    case 'disableFuture':\n      return 'Values in the future are not allowed';\n    case 'maxDate':\n      return maxDate\n        ? `Date should not be after ${maxDate}`\n        : 'Date should not be after the specified limit';\n    case 'minDate':\n      return minDate\n        ? `Date should not be before ${minDate}`\n        : 'Date should not be before the specified limit';\n\n    case 'shouldDisableMonth':\n      return 'Month is not allowed';\n    case 'shouldDisableYear':\n      return 'Year is not allowed';\n    case 'shouldDisableDate':\n      return 'Date is not allowed';\n    default:\n      return null;\n  }\n}\n\nexport function mapTimePickerValidationErrorMessage<\n  TDate extends PickerValidDate,\n  TEnableAccessibleFieldDOMStructure extends boolean,\n>(\n  error: TimeValidationError,\n  props: TimePickerProps<TDate, TEnableAccessibleFieldDOMStructure>\n) {\n  const { minTime, maxTime } = props;\n\n  switch (error) {\n    case 'invalidDate':\n      return 'Invalid date/time value provided';\n    case 'disablePast':\n      return 'Values in the past are not allowed';\n    case 'disableFuture':\n      return 'Values in the future are not allowed';\n    case 'maxTime':\n      return maxTime\n        ? `Time should not be after ${maxTime}`\n        : 'Time should not be after the specified limit';\n    case 'minTime':\n      return minTime\n        ? `Time should not be before ${minTime}`\n        : 'Time should not be before the specified limit';\n    case 'minutesStep':\n      return `Invalid minutes step, can only step in increments of ${props?.minutesStep || 'Invalid minutes step'}`;\n    case 'shouldDisableTime-hours':\n      return 'Specified hour is disabled';\n    case 'shouldDisableTime-minutes':\n      return 'Specified minute is disabled';\n    case 'shouldDisableTime-seconds':\n      return 'Specified second is disabled';\n    default:\n      return null;\n  }\n}\n"],"names":[],"mappings":"AAUgB,SAAA,wCAId,OACA,OACA;AACM,QAAA,WAAU,+BAAO,aAAW,+BAAO;AACnC,QAAA,WAAU,+BAAO,aAAW,+BAAO;AACnC,QAAA,WAAU,+BAAO,aAAW,+BAAO;AACnC,QAAA,WAAU,+BAAO,aAAW,+BAAO;AAEzC,UAAQ,OAAO;AAAA,IACb,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA,UACH,4BAA4B,OAAO,KACnC;AAAA,IACN,KAAK;AACI,aAAA,UACH,6BAA6B,OAAO,KACpC;AAAA,IACN,KAAK;AACI,aAAA,UACH,4BAA4B,OAAO,KACnC;AAAA,IACN,KAAK;AACI,aAAA,UACH,6BAA6B,OAAO,KACpC;AAAA,IACN,KAAK;AACI,aAAA,yDAAwD,+BAAO,gBAAe,sBAAsB;AAAA,IAC7G,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT;AACS,aAAA;AAAA,EACX;AACF;AAEgB,SAAA,oCAId,OACA,OACA;AACM,QAAA,EAAE,SAAS,QAAY,IAAA;AAE7B,UAAQ,OAAO;AAAA,IACb,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA,UACH,4BAA4B,OAAO,KACnC;AAAA,IACN,KAAK;AACI,aAAA,UACH,6BAA6B,OAAO,KACpC;AAAA,IAEN,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT;AACS,aAAA;AAAA,EACX;AACF;AAEgB,SAAA,oCAId,OACA,OACA;AACM,QAAA,EAAE,SAAS,QAAY,IAAA;AAE7B,UAAQ,OAAO;AAAA,IACb,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA,UACH,4BAA4B,OAAO,KACnC;AAAA,IACN,KAAK;AACI,aAAA,UACH,6BAA6B,OAAO,KACpC;AAAA,IACN,KAAK;AACI,aAAA,yDAAwD,+BAAO,gBAAe,sBAAsB;AAAA,IAC7G,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT;AACS,aAAA;AAAA,EACX;AACF;"}